#!/usr/bin/python3

#анализ GC состава гена

import numpy as np
import pandas as pd

# окно для анализа GC состава в 30 нуклеотидов
GC_30 = dict()

for i in range(len(sequence) - 30):
    GC_30[i] = int(100 * (sequence[i: i+30].count('G') + sequence[i: i+30].count('C')) / len(sequence[i: i+30]))

GC_content = pd.DataFrame(GC_30, index=['GC_content'])
GC_content = GC_content.transpose()

mean_GC = int(100 * (sequence.count('G') + sequence.count('C')) / len(sequence))

for i in GC_content.index:
    GC_content.loc[i, 'Max'] = 100
    GC_content.loc[i, 'Min'] = 0
    GC_content.loc[i, 'Mean'] = mean_GC

print("Среднее содержание GC - ", mean_GC, "\n")
    

GC_content.to_excel(project_name + '_GC.xls')



codon_usage = dict()

nucleotides = ['A', 'T', 'G', 'C']

for x in range(len(nucleotides)):
    for y in range(len(nucleotides)):
        for z in range(len(nucleotides)):
            codon = nucleotides[x]+nucleotides[y]+ nucleotides[z]
            if codon in codon_usage:
                continue
            else:
                codon_usage[codon] = 0


for i in range(0, len(sequence),3):
    codon_usage[sequence[i:i+3]] += 1

print('Какая система экспрессии?'+'\n'+'1 - E.coli\n'+'2 - CHO\n'+'3 - HEK293\n'+ '4 - SF9\n')    
syst_expr = int(input())
    
if syst_expr == 1:
    syst_expr = 'E_coli'
elif syst_expr == 2:
    syst_expr = "CHO"
elif syst_expr == 4:
    syst_expr ='SF9'
else:
    syst_expr = 'HEK293'
    
e_coli = pd.DataFrame(pd.read_csv(("Expression_systems/"+syst_expr+'.csv'), sep=';', header=None))
e_coli = e_coli.rename(columns={0:'Codon', 1:'AA', 2:'Usage'})
e_coli = e_coli.rename(index = e_coli['Codon'])[['AA', 'Usage']]
AA = dict()

for i in range(len(e_coli.index)):
    if e_coli.iloc[i][0] not in AA:
        AA[e_coli.iloc[i][0]] = [float(e_coli.iloc[i][1].replace(',', '.'))]
    else: 
        AA[e_coli.iloc[i][0]].append(float(e_coli.iloc[i][1].replace(',', '.')))
        
for i in AA:
    max_usage = max(AA[i])
    temp = []
    for j in range(len(AA[i])):
        temp.append(AA[i][j]/max_usage)
    AA[i] = temp
    
temp = []
for i in AA:
    for j in range(len(AA[i])):
        temp.append(AA[i][j])
        
e_coli.Usage = temp

seq_codons = pd.Series(codon_usage)
seq_codons = pd.DataFrame(seq_codons).rename(columns={0 : 'Usage'})

graph = dict()

for i in range(10, 110, 10):
    graph[i] = []
    
for i in codon_usage.keys():
    if int(e_coli.loc[i][1]*100//10)*10 == 0:
        continue
    else:
        graph[int(e_coli.loc[i][1]*100//10)*10].append(seq_codons.loc[i][0])
        
for i in graph.keys():
    graph[i] = sum(graph[i])
    
graph = pd.Series(graph)
graph = pd.DataFrame(graph).rename(columns={0 : 'Usage'})

x = []
for i in graph.index:
    x.append(int(i))
    
y = []
for i in x:
    y.append(int(graph.loc[i][0]))
    

graph.to_excel(project_name + '_codon_usage_'+syst_expr+'.xls')
